#!/bin/bash
## Graficzny instalator kerneli e X t 7 3  - NeteXt'73
## przygotowanie kerneli e X t 7 3 - ext73@wp.pl
## przygotowanie skryptów optymalizacyjnych e X t 7 3
## autor skryptu NeteXt'73 - NetBit73 - netbit73@gmail.com
## opiekun repozytorium eloaders eloaders.ubf.pl@gmail.com
## tłumaczenie na język angielski: Tomasz Przybył (FadeMind)
## tłumaczenie na język francuski: Michał Radwański (enedil)
## Licencja: GPL v3: https://www.gnu.org/licenses/gpl.txt
#
#		    _   _      _      __  ___   _ _____ _____
#		   | \ | | ___| |_ ___\ \/ / |_( )___  |___ /
#		   |  \| |/ _ \ __/ _ \\  /| __|/   / /  |_ \
#		   | |\  |  __/ |_  __//  \| |_    / /  ___) |
#		   |_| \_|\___|\__\___/_/\_\\__|  /_/  |____/
#
#	            __ _ _ __ __ _ / _(_) ___ _____ __  _   _
#	           / _` | '__/ _` | |_| |/ __|_  / '_ \| | | |
#	          | (_| | | | (_| |  _| | (__ / /| | | | |_| |
#	           \__, |_|  \__,_|_| |_|\___/___|_| |_|\__, |
#	           |___/                                |___/
#     _           _        _       _                   _                        _ _
#    (_)_ __  ___| |_ __ _| | __ _| |_ ___  _ __      | | _____ _ __ _ __   ___| (_)
#    | | '_ \/ __| __/ _` | |/ _` | __/ _ \| '__|     | |/ / _ \ '__| '_ \ / _ \ | |
#    | | | | \__ \ |_ (_| | | (_| | |_ (_) | |        |   <  __/ |  | | | |  __/ | |
#    |_|_| |_|___/\__\__,_|_|\__,_|\__\___/|_|        |_|\_\___|_|  |_| |_|\___|_|_|
#        __  __  _     _____   _____      ___     _   _      _   ____  _ _  _____ ____
#   ___  \ \/ / | |_  |___  | |___ /     ( _ )   | \ | | ___| |_| __ )(_) |____  |___ /
#  / _ \  \  /  | __|    / /    |_ \     / _ \/\ |  \| |/ _ \ __|  _ \| | __| / /  |_ \
# |  __/  /  \  | |_    / /    ___) |   | (_>  < | |\  |  __/ |_| |_) | | |_ / /  ___) |
#  \___| /_/\_\  \__|  /_/    |____/     \___/\/ |_| \_|\___|\__|____/|_|\__/_/  |____/
#
#########################################################################################################################################################################
#procedury

source /opt/NeteXt73/procedury

#########################################################################################################################################################################
#Grub edytor

cd /tmp
rm *.html -f
petla_duza="tak"
while [ $petla_duza = "tak" ]; do
rm /tmp/*.txt -f; rm /tmp/*.sh -f

if [ "$(grep "GRUB_CMDLINE_LINUX=" /etc/default/grub)" != "GRUB_CMDLINE_LINUX=\"\"" ];  then
      g1="$TEXT_TAK : $(grep GRUB_CMDLINE_LINUX=\" /etc/default/grub | sed "s/GRUB_CMDLINE_LINUX=//")"
else
      g1="-"
fi


#GRUB
sciezka="/etc/default"
echo "nie" > /tmp/ok.txt

grub=$(yad-netext --title="$nazwa_skryptu" --window-icon="/opt/NeteXt73/ikony/grub.png" --form --field="$TEXT_SKRYPTEXT_10" --field="$TEXT_SKRYPTEXT_11:CB" "$(grep GRUB_CMDLINE_LINUX=\" /etc/default/grub | sed 's/GRUB_CMDLINE_LINUX=//' | cut -d '"' -f 2)" "$TEXT_GRUB4A!$TEXT_GRUB5A!$TEXT_GRUB6A!$TEXT_GRUB7A!$TEXT_NETBIT_MENU1D" --button="gtk-ok:0" --button="$TEXT_POWROT:1"  )
klawisz=$?; grub=$(echo $grub | cut -d "|" -f 2)
	if [ $klawisz = 0 ]; then 
	#backup pliku grub
	if [ "$grub" = "$TEXT_GRUB4A" ]; then
	      echo "nie" > /tmp/ok.txt
	      xterm -T Grub -e bash -c "echo \"$TEXT_GRUB8 /etc/default/grub\";sudo cp $sciezka/grub $sciezka/grub.backup -f; echo -e \"$TEXT_INSTALACJA2\"; read ent; echo 'tak' > /tmp/ok.txt"
	      if [ "$(cat /tmp/ok.txt)" = "nie" ]; then
		      notify-send  -i $warning1 "$TEXT_UWAGA" "$TEXT_GRUB9"
	      fi
	#grub timeout
	elif [ "$grub" = "$TEXT_NETBIT_MENU1D" ]; then
		czas=$(yad-netext --scale --title="$nazwa_skryptu" --button="gtk-ok:0" --button="$TEXT_POWROT:1" --text "$TEXT_NETBIT_MENU18" --min-value=-1 --max-value=10 --value=3 --step 1)
		if [ $? = 0 ]; then
			  export czas=$czas
			  xterm -T Grub -e bash -c "echo \"$TEXT_NETBIT_MENU19\"; sudo sed /etc/default/grub -i -e \"s/GRUB_TIMEOUT=.*/GRUB_TIMEOUT=$czas/\"; sudo update-grub;  echo -e \"$TEXT_INSTALACJA2\"; read ent"
		  fi
	#przywrócenie pliku grub z backupu
	elif [ "$grub" = "$TEXT_GRUB5A" ]; then
	      if [ -e $sciezka/grub.backup ]; then
		    echo "nie" > /tmp/ok.txt
		    xterm -T Grub -e bash -c "echo \"$TEXT_GRUB10\"; sudo cp $sciezka/grub.backup $sciezka/grub -f; sudo update-grub; echo -e \"$TEXT_INSTALACJA2\"; read ent; echo 'tak' > /tmp/ok.txt"
		    if [ "$(cat /tmp/ok.txt)" = "nie" ]; then
			  notify-send  -i $warning1 "$TEXT_UWAGA" "$TEXT_GRUB11"
		    fi
	      else
		    notify-send  -i $warning1 "$TEXT_UWAGA" "$TEXT_GRUB12"
	      fi
	#dokonaie zmian we wpisach w pliku grub
	elif [ "$grub" = "$TEXT_GRUB6A" ]; then
	      if [ -e $sciezka/grub.backup ]; then
		    echo 'tak' > /tmp/ok.txt
	      else
		    notify-send -i $warning1 "$TEXT_UWAGA" "$TEXT_GRUB13 $sciezka"
		    #kasowanie starych wpisów w grub
		    xterm -e bash -c "sudo cp $sciezka/grub $sciezka/grub.backup -f; echo -e \"$TEXT_INSTALACJA2\"; read ent;  echo 'tak' > /tmp/ok.txt"
	      fi
	      if [ "$(cat /tmp/ok.txt)" = "tak" ]; then
	      acpi_wpis=$( yad-netext --height=240 --width=610 --button="gtk-ok:0" --button="$TEXT_POWROT:1" --title="$nazwa_skryptu" --window-icon="/opt/NeteXt73/ikony/pytanie.png" --text="ACPI" --list --radiolist --column=""  --column="$TEXT_OPIS" \
		TRUE "acpi_osi=Linux" \
		FALSE "acpi_osi='!Windows 2012'" )
		if [ $? = 0 ]; then 
		    w0=$(echo $acpi_wpis  | cut -d "|" -f 2)
		fi
	      #--column="$TEXT_MENU"
	      wpisy=$(yad-netext --height=240 --width=610 --title="$nazwa_skryptu" --window-icon="/opt/NeteXt73/ikony/pytanie.png" --text="$TEXT_GRUB14" --list --radiolist --column=""  --column="$TEXT_OPIS" --button="gtk-ok:0" --button="$TEXT_POWROT:1" \
		TRUE "$TEXT_GRUB_STD" \
		FALSE "$TEXT_GRUB_INTEL" \
		FALSE "$TEXT_GRUB_RADEON" )
		if [ $? = 0 ]; then
		    wpisy=$(echo $wpisy  | cut -d "|" -f 2)
		    podswietlenie=$(yad-netext --height=240 --width=600 --title="$nazwa_skryptu" --window-icon="/opt/NeteXt73/ikony/pytanie.png" --text="$TEXT_GRUB17" --list --radiolist --column="$TEXT_ZAZNACZ" --column="$TEXT_MENU" --column="$TEXT_OPIS" --button="gtk-ok:0" --button="$TEXT_POWROT:1" \
		      TRUE "standard" "$TEXT_GRUB15"\
		      FALSE "$TEXT_GRUB19" "$TEXT_GRUB18")
		      if [ $? = 0 ]; then
			    podswietlenie=$(echo $podswietlenie  | cut -d "|" -f 2)
			    if [ "$wpisy" = "$TEXT_GRUB_STD" ]; then		w1=" acpi_enforce_resources=lax"
			    elif [ "$wpisy" = "$TEXT_GRUB_INTEL" ]; then 	w1=" acpi_enforce_resources=lax i915.i915_enable_rc6=1 i915.i915_enable_fbc=1 i915.lvds_downclock=1 i915.semaphores=1"
			    elif [ "$wpisy" = "$TEXT_GRUB_RADEON" ]; then w1=" acpi_enforce_resources=lax radeon.dpm=1"
			    fi

			    if [ "$podswietlenie" = "standard" ]; then      	w2=""
			    elif [ "$podswietlenie" = "$TEXT_GRUB19" ]; then  	w2=" acpi_backlight=vendor"
			    fi

			    zmiany=$(yad-netext --height=240 --width=600 --button="gtk-ok:0" --button="$TEXT_POWROT:1" --title="$nazwa_skryptu" --window-icon="/opt/NeteXt73/ikony/pytanie.png" --text="$TEXT_GRUB21" --list --radiolist --column="$TEXT_ZAZNACZ" --column="$TEXT_MENU" --column="$TEXT_OPIS" \
			      TRUE "standard" "$TEXT_GRUB21A"\
			      FALSE "$TEXT_GRUB21B" "$TEXT_GRUB21C")
				zmiany=$(echo $zmiany | cut -d "|" -f 2)
				if [ "$zmiany" = "standard" ]; then
				    wpis_grub="$w0$w1$w2"
				    instaluj_grub
				elif [ "$zmiany" = "$TEXT_GRUB21B" ]; then
				    wpis_grub=$(yad-netext  --height=240 --width=600 --button="gtk-ok:0" --button="$TEXT_POWROT:1" --title="$nazwa_skryptu" --window-icon="/opt/NeteXt73/ikony/pytanie.png" --entry --text="$TEXT_GRUB22" --entry-text="$w0$w1$w2")
				    wpis_grub=$(echo $wpis_grub | cut -d "|" -f 2)
				    if [ "$wpis_grub" != "" ];then
					instaluj_grub
				    fi
				fi
		      fi
		fi
	    fi
	#ręczna edycja wpisów w pliku grub
	elif [ "$grub" = "$TEXT_GRUB7A" ]; then
	    echo "nie" > /tmp/ok.txt
	    wpis_grub=$(yad-netext  --height=240 --width=600 --button="gtk-ok:0" --button="$TEXT_POWROT:1" --title="$nazwa_skryptu" --entry --text="$TEXT_GRUB23" --window-icon="/opt/NeteXt73/ikony/pytanie.png" --entry-text="$(grep GRUB_CMDLINE_LINUX=\" /etc/default/grub | cut -d "\"" -f 2)")
	    if [ $? = 0 ]; then
		    wpis_grub=$(echo $wpis_grub | cut -d "|" -f 2)
		    instaluj_grub
	    fi
	fi
	fi
if [ -z "$a" ]; then
	      petla_duza="nie"
	      rm *.txt -f
fi
done
