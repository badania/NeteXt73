#!/bin/bash
## Graficzny instalator kerneli e X t 7 3  - NeteXt'73
## przygotowanie kerneli e X t 7 3 - ext73@wp.pl
## przygotowanie skryptów optymalizacyjnych e X t 7 3
## autor skryptu NeteXt'73 - NetBit73 - netbit73@gmail.com
## opiekun repozytorium eloaders eloaders@linux.pl
## tłumaczenie na język angielski: Tomasz Przybył (FadeMind)
## tłumaczenie na język francuski: Michał Radwański (enedil)
## Licencja: GPL v3: https://www.gnu.org/licenses/gpl.txt
#
#		    _   _      _      __  ___   _ _____ _____
#		   | \ | | ___| |_ ___\ \/ / |_( )___  |___ /
#		   |  \| |/ _ \ __/ _ \\  /| __|/   / /  |_ \
#		   | |\  |  __/ |_  __//  \| |_    / /  ___) |
#		   |_| \_|\___|\__\___/_/\_\\__|  /_/  |____/
#
#	            __ _ _ __ __ _ / _(_) ___ _____ __  _   _
#	           / _` | '__/ _` | |_| |/ __|_  / '_ \| | | |
#	          | (_| | | | (_| |  _| | (__ / /| | | | |_| |
#	           \__, |_|  \__,_|_| |_|\___/___|_| |_|\__, |
#	           |___/                                |___/
#     _           _        _       _                   _                        _ _
#    (_)_ __  ___| |_ __ _| | __ _| |_ ___  _ __      | | _____ _ __ _ __   ___| (_)
#    | | '_ \/ __| __/ _` | |/ _` | __/ _ \| '__|     | |/ / _ \ '__| '_ \ / _ \ | |
#    | | | | \__ \ |_ (_| | | (_| | |_ (_) | |        |   <  __/ |  | | | |  __/ | |
#    |_|_| |_|___/\__\__,_|_|\__,_|\__\___/|_|        |_|\_\___|_|  |_| |_|\___|_|_|
#        __  __  _     _____   _____      ___     _   _      _   ____  _ _  _____ ____
#   ___  \ \/ / | |_  |___  | |___ /     ( _ )   | \ | | ___| |_| __ )(_) |____  |___ /
#  / _ \  \  /  | __|    / /    |_ \     / _ \/\ |  \| |/ _ \ __|  _ \| | __| / /  |_ \
# |  __/  /  \  | |_    / /    ___) |   | (_>  < | |\  |  __/ |_| |_) | | |_ / /  ___) |
#  \___| /_/\_\  \__|  /_/    |____/     \___/\/ |_| \_|\___|\__|____/|_|\__/_/  |____/
#
#########################################################################################################################################################################
#procedury

source /opt/NeteXt73/procedury


#########################################################################################################################################################################
#Skrypty

cd /tmp/netext73
#testy
if [ "$1" = "testy" ]; then
	menu="BurnTest!$MENU01!$MENU02!$MENU03!$MENU04!$MENU15!$MENU16"
	ikonka="/opt/NeteXt73/ikony/testy.png"

#inne skrypty
else
	if [ "$(cat /etc/sysctl.conf | grep 'net.ipv6.conf.all.disable_ipv6 = 1')" = "" ]; then
		menu="$MENU3!$MENU4!$MENU5!$MENU6!$MENU7!$MENU10!$MENU11!$MENU13!$MENU14"
	    else
		menu="$MENU3!$MENU4!$MENU5!$MENU6!$MENU8!$MENU10!$MENU11!$MENU13!$MENU14"
	fi
	ikonka="/opt/NeteXt73/ikony/skrypty.png"
fi

skrypt=$(yad-netext --center --title="$nazwa_skryptu" --window-icon=$ikonka --image=$ikonka --form --field="$TEXT_DEINSTALATOR1:CB" "$menu" --button="gtk-ok:0" --button="$TEXT_POWROT:1"  )
klawisz=$?; skrypt=$(echo $skrypt | cut -d "|" -f 1)
if [ $klawisz = 0 ]; then

	#kasujem dane po konfigach
	if [ "$skrypt" = "$MENU3" ]; then
		if [ "$(dpkg -l | grep '^rc' | awk '{print $2}' | head -n1)" != "" ]; then
		      xterm -T configi -e bash -c "echo \"$TEXT_INSTALACJA1\"; sudo dpkg -l | grep '^rc' | awk '{print \$2}' | xargs sudo dpkg --purge; echo -e \"$TEXT_INSTALACJA2\" ;read ent"
		else 
		      yad-netext --center --info --title="$nazwa_skryptu"  --window-icon="/opt/NeteXt73/ikony/info.png" --image="/opt/NeteXt73/ikony/info.png" --button="gtk-ok:0" --text="$TEXT_CONFIG1" 
		fi
	
	#RAM    
	elif [ "$skrypt" = "$MENU14" ]; then   
		x-terminal-emulator -e bash -c "echo -e \"$TEXT_RAM6\n\"; echo \"$TEXT_RAM7\"; free -m; sync; sudo bash -c 'echo 3 > /proc/sys/vm/drop_caches'; echo -e \"\n$TEXT_RAM8\"; free -m; echo -e \"$TEXT_INSTALACJA2\"; read ent"

	#zabijamy procesy zombie
	elif [ "$skrypt" = "$MENU4" ]; then
		ps axo stat,ppid,pid,comm | grep -w defunct > procesy.txt
		if [ "$(cat procesy.txt)" = "" ]; then
		      yad-netext --center --info --title="$nazwa_skryptu"  --window-icon="/opt/NeteXt73/ikony/info.png" --image="/opt/NeteXt73/ikony/info.png" --button="gtk-ok:0" --text="$TEXT_ZOMBIE2"
		else
		      sed -i 1d procesy.txt
		      sed -i '/^[^#]/s:^:FALSE :' procesy.txt
		      a=$(yad-netext --center --height=540 --width=440 --window-icon="/opt/NeteXt73/ikony/skrypty.png" --button="gtk-ok:0" --button="$TEXT_POWROT:1" --title="$nazwa_skryptu" --text="$TEXT_ZOMBIE1" --column="" --column="STAT" --column="PPID" --column="PID" --column="COMMAND" --checklist --list $(cat procesy.txt))
		      echo $a > zabij
		      sed -i 's/TRUE/\n/g' zabij; sed -i '/^\ *$/d' zabij
		      for i in $(cat zabij  | cut -d '|' -f 3)
		      do
			  sudo kill $i
		      done
		fi
		rm *.txt -f
	    
	#odpalamy tasksel
	elif [ "$skrypt" = "$MENU5" ]; then
		cd /tmp/netext73
		x-terminal-emulator -e bash -c "echo -e \"$TEXT_TASKSEL1\"; sudo tasksel; echo -e \"$TEXT_INSTALACJA2\"; read ent"
	    
	#synchronizuj czas z internetu
	elif [ "$skrypt" = "$MENU6" ]; then
		xterm -T time -e bash -c "echo \"$TEXT_INSTALACJA1\"; sudo ntpdate tempus1.gum.gov.pl; echo -e \"$TEXT_INSTALACJA2\" ;read ent"
	#ipv6 off
	
	elif [ "$skrypt" = "$MENU7" ]; then
		naglowek > instaluj.sh
		ipv6_off >> instaluj.sh
		instalacja
	    
	#ipv6 on
	elif [ "$skrypt" = "$MENU8" ]; then
		naglowek > instaluj.sh
		ipv6_on >> instaluj.sh
		instalacja
	    
	#chrome gtk fix
	elif [ "$skrypt" = "$MENU10" ]; then
		naglowek > instaluj.sh
		echo "sudo mv /usr/bin/google-chrome-stable /usr/bin/google-chrome" >> instaluj.sh
		echo "sudo sed -i 's/google-chrome-stable/google-chrome/' /usr/share/applications/google-chrome.desktop" >> instaluj.sh
		instalacja3
	    
	#modem usb fix
	elif [ "$skrypt" = "$MENU11" ]; then
		naglowek > instaluj.sh
		echo "sudo mv /lib/udev/rules.d/40-usb_modeswitch.rules /lib/udev/rules.d/61-usb_modeswitch.rules" >> instaluj.sh
		instalacja3
	    
	#burntest
	elif [ "$skrypt" = "BurnTest" ]; then
		burntest
	
	#sysbench
	elif [ "$(echo $skrypt | grep 'sysbench')" != "" ]; then    
		#zmienne
		a0="Doing"
		a1="Number of threads:"
		a2="total time:"
		a3="total number of events:"
		a4="total time taken by event execution:"
		a5="min:"
		a6="avg:"
		a7="max:"
		a8="approx.  95 percentile:"
		a9="events (avg/stddev):"
		a10="execution time (avg/stddev):"

		#katalog roboczy skryptu
		cd ~/.netext73/sysbench
		#procedury

		info_test(){
			yad-netext --center --info --title="$nazwa_skryptu"  --window-icon="/opt/NeteXt73/ikony/info.png" --image="/opt/NeteXt73/ikony/info.png" --button="gtk-ok:0" --text="$TEXT_SYSBENCH_PROGRESS" --timeout=$1
		}

		zrob_test(){
			DATE=$(date +"%Y-%m-%d@%H:%M")
			if [ "$2" = "cpu" ]; then
			      echo "uname $(uname -r)" > cpu_$(uname -r)_$DATE-sysbench.log 
			      sysbench --num-threads=$1 --test=cpu run >> cpu_$(uname -r)_$DATE-sysbench.log  
			      echo "test_time : " $DATE >> cpu_$(uname -r)_$DATE-sysbench.log  
			else
			      echo "uname $(uname -r)" > memory_$(uname -r)_$DATE-sysbench.log
			      sysbench --num-threads=$1 --test=memory run >> memory_$(uname -r)_$DATE-sysbench.log 
			      echo "test_time : " $DATE >> memory_$(uname -r)_$DATE-sysbench.log  
			fi
		}



		wynik_testu(){
			yad-netext --center --title="$nazwa_skryptu" --width=610 --window-icon="/opt/NeteXt73/ikony/netext.png" --image="/opt/NeteXt73/ikony/netext.png" --button="gtk-ok:0" --form \
			--field="uname -r:RO" "$(grep "uname" $1 | cut -d " " -f 2 )" \
			--field="$(grep "$a0" $1 | sed 's/Doing //'):RO" "YES" \
			--field="$a1:RO" "$(grep "$a1" $1 | sed 's/.*: *//')" \
			--field="Test execution summary - $a2:RO" "$(grep "$a2" $1 | sed 's/.*: *//')" \
			--field="Test execution summary - $a3:RO" "$(grep "$a3" $1 | sed 's/.*: *//')" \
			--field="Test execution summary - $a4:RO" "$(grep "$a4" $1 | sed 's/.*: *//')" \
			--field="per-request statistics $a5:RO" "$(grep "$a5" $1 | sed 's/.*: *//')" \
			--field="per-request statistics $a6:RO" "$(grep "$a6" $1 | sed 's/.*: *//')" \
			--field="per-request statistics $a7:RO" "$(grep "$a7" $1 | sed 's/.*: *//')" \
			--field="per-request statistics $a8:RO" "$(grep "$a8" $1 | sed 's/.*: *//')" \
			--field="Threads fairness $a9:RO" "$(grep "$a9" $1 | sed 's/.*: *//')" \
			--field="Threads fairness $a10:RO" "$(grep "$a10" $1 | sed 's/.*: *//')" 
		}


		porownanie(){
			rm pliki -f
			for i in $(ls *sysbench.log | grep $1 ); do
				if [ "$(grep test_time $i)" = "" ]; then
					rm $i
				else
					grep "uname" $i | cut -d " " -f 2 >> pliki
					grep "test_time" $i | sed 's/test_time : *//' >> pliki
					grep "$a1" $i | sed 's/.*: *//' >> pliki
					grep "$a2" $i | sed 's/.*: *//' >> pliki
					grep "$a3" $i | sed 's/.*: *//' >> pliki
					grep "$a4" $i | sed 's/.*: *//' >> pliki
					grep "$a5" $i | sed 's/.*: *//' >> pliki
					grep "$a6" $i | sed 's/.*: *//' >> pliki
					grep "$a7" $i | sed 's/.*: *//' >> pliki
					grep "$a8" $i | sed 's/.*: *//' >> pliki
					grep "$a9" $i | sed 's/.*: *//' >> pliki
					grep "$a10" $i | sed 's/.*: *//' >> pliki
				fi
			done
			if [ "$1" = "memory" ]; then
				ikona="/opt/NeteXt73/ikony/ram.png"
			else
				ikona="/opt/NeteXt73/ikony/microcode.png"
			fi
			pliczek=$(yad-netext --center --title="$nazwa_skryptu" --text="$skrypt" --width=1024 --height=450 --window-icon=$ikona --image=$ikona \
			--column="uname -r" --column="test dates:" --column="$(echo $a1 | sed 's/ of/\nof/')" --column="$a2" --column="$(echo $a3 | sed 's/ of/\nof/')" --column="$(echo $a4 | sed 's/ event/\nevent/' | sed 's/ taken/\ntaken/' )" --column="$a5"  --column="$a6" --column="$a7" --column="$(echo $a8 | sed 's/ 95/\n95/')" --column="$(echo $a9 | sed 's/(/\n(/')" --column="$(echo $a10 | sed 's/(/\n(/')" --list $(cat pliki) --button="$TEXT_USUN_WYNIK:0"  --button="$TEXT_ZAMKNIJ:1" )
			klawisz=$?; pliczek=$(echo $pliczek | cut -d " " -f 2)
			if [ "$klawisz" = "0" ]; then
				if [ "$1" = "cpu" ]; then
					rm $(ls | grep $pliczek | grep cpu)
				else
					rm $(ls | grep $pliczek | grep memory)
				fi
			fi
			rm pliki -f
		}

		petla="tak"
		while [ $petla = "tak" ]; do
			if [ "$skrypt" = "$MENU01" ]; then
				info_test 5 CPU & 
				zrob_test $(grep 'model name' /proc/cpuinfo | wc -l ) cpu 
				wynik_testu cpu_$(uname -r)_$DATE-sysbench.log 
			elif [ "$skrypt" = "$MENU02" ]; then
				info_test 25 MEMORY &
				zrob_test $(grep 'model name' /proc/cpuinfo | wc -l ) memory
				wynik_testu memory_$(uname -r)_$DATE-sysbench.log
			elif [ "$skrypt" = "$MENU03" ]; then
				porownanie cpu
			elif [ "$skrypt" = "$MENU04" ]; then
				porownanie memory
			fi
			if [ -z "$pliczek" ]; then
				petla="nie"
			fi
		done
	    
	#glmark
	elif [ "$(echo $skrypt | grep 'glmark')" != "" ]; then        
		#katalog roboczy skryptu
		cd ~/.netext73/glmark2

		#procedury
		zrob_test(){
			DATE=$(date +"%Y-%m-%d@%H:%M")
			echo "uname $(uname -r)" > $(uname -r)_$DATE-glmark2.log 
			glmark2 >> $(uname -r)_$DATE-glmark2.log 
			echo "test_time: " $DATE >> $(uname -r)_$DATE-glmark2.log 
		}

		wynik_testu(){
			rm *.txt -f
			cat $1 | tr -d "\015" | grep '\[' | sed 's/FPS:/$/g' | cut -d '$' -f 1 | sed 's/ //g' > kolumna1.txt
			cat $1 | tr -d "\015" | grep '\[' | sed 's/.*FPS://g' | awk '{print $1}' > kolumna2.txt
			cat $1 | tr -d "\015" | grep '\[' | sed 's/.*FrameTime://g' | sed 's/ //g' |awk '{print $1}' > kolumna3.txt
			paste -d " " kolumna1.txt kolumna2.txt kolumna3.txt > kolumny.txt
			wynik="$(grep "glmark2 Score:" $1 | sed "s/glmark2 Score:[[:space:]]*//g" | sed "s/[[:space:]]//g")"
			yad-netext --center --title="$nazwa_skryptu" --text="glmark2 score: $wynik" --width=880 --height=780 --window-icon="/opt/NeteXt73/ikony/netext.png" --image="/opt/NeteXt73/ikony/netext.png" --button="gtk-ok:0" --list $(cat kolumny.txt) \
			--column="Name" --column="FPS:" --column="FrameTime:"
				rm *.txt -f
		}

		porownanie(){
			petla="tak"
			while [ $petla = "tak" ]; do
				IFS=$' \t\n'
				rm tymczasowy.txt -f
				for i in $(ls *glmark2.log ); do
					if [ "$(grep test_time $i)" = "" ]; then
						rm $i
					else
						grep "uname" $i | cut -d " " -f 2 >> tymczasowy.txt
						echo -e "\n" >> tymczasowy.txt
						for a in $(echo test_time: GL_VENDOR: GL_RENDERER: GL_VERSION:); do
							grep "$a" $i | sed "s/$a[[:space:]]*//g" | sed 's/^[ \t]*//' | sed 's/ $//' >> tymczasowy.txt
							echo -e "\n" >> tymczasowy.txt
						done
						grep "glmark2 Score:" $i | sed "s/glmark2 Score:[[:space:]]*//g" | sed "s/[[:space:]]//g" >> tymczasowy.txt
						echo -e "\n" >> tymczasowy.txt
					fi
				done
				sed -i '/^[ \t]*$/ d' tymczasowy.txt
				IFS=$'\n'
				pliczek=$(yad-netext --center --title="$nazwa_skryptu" --text="$MENU16" --width=1024 --height=450 --window-icon="/opt/NeteXt73/ikony/glmark.png" --image="/opt/NeteXt73/ikony/glmark.png" \
				--column="uname -r" --column="test dates:" --column="GL_VENDOR:" --column="GL_RENDERER:" --column="GL_VERSION:" --column="Total score:" --separator=$'\n' --list $(cat tymczasowy.txt) --button="$TEXT_USUN_WYNIK:0"  --button="$TEXT_ZAMKNIJ:1" )
				klawisz=$?; pliczek=$(echo $pliczek | cut -d " " -f 2)
				if [ "$klawisz" = "0" ]; then
					rm $(ls | grep $pliczek)
					rm tymczasowy.txt -f
				else
					petla="nie"
					rm tymczasowy.txt -f
				fi
			done
		}
		if [ "$skrypt" = "$MENU15" ]; then
			zrob_test
			wynik_testu $(uname -r)_$DATE-glmark2.log
			porownanie
		elif [ "$skrypt" = "$MENU16" ]; then
			porownanie
		fi

	#aktualizacja dropboxa		
	elif [ "$skrypt" = "$MENU13" ]; then 
		if [ "$USER" = "root" ]; then
			userek=$(cat /tmp/netext73/userek)
			su $userek -c "x-terminal-emulator -e bash -c \"killall dropbox;cd ~;rmdir --ignore-fail-on-non-empty .dropbox-dist && wget -O - 'http://www.dropbox.com/download?plat=lnx.x86_64' | tar xzf - ; echo -e \"$TEXT_INSTALACJA2\"; read ent\""
		else
			x-terminal-emulator -e bash -c "killall dropbox;cd ~;rmdir --ignore-fail-on-non-empty .dropbox-dist && wget -O - 'http://www.dropbox.com/download?plat=lnx.x86_64' | tar xzf - ; echo -e \"$TEXT_INSTALACJA2\"; read ent"
		fi
	fi
fi

