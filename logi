#!/bin/bash
## Graficzny instalator kerneli e X t 7 3  - NeteXt'73
## przygotowanie kerneli e X t 7 3 - ext73@wp.pl
## przygotowanie skryptów optymalizacyjnych e X t 7 3
## autor skryptu NeteXt'73 - NetBit73 - netbit73@gmail.com
## opiekun repozytorium eloaders eloaders@linux.pl
## tłumaczenie na język angielski: Tomasz Przybył (FadeMind)
## tłumaczenie na język francuski: Michał Radwański (enedil)
## Licencja: GPL v3: https://www.gnu.org/licenses/gpl.txt
#
#		    _   _      _      __  ___   _ _____ _____
#		   | \ | | ___| |_ ___\ \/ / |_( )___  |___ /
#		   |  \| |/ _ \ __/ _ \\  /| __|/   / /  |_ \
#		   | |\  |  __/ |_  __//  \| |_    / /  ___) |
#		   |_| \_|\___|\__\___/_/\_\\__|  /_/  |____/
#
#	            __ _ _ __ __ _ / _(_) ___ _____ __  _   _
#	           / _` | '__/ _` | |_| |/ __|_  / '_ \| | | |
#	          | (_| | | | (_| |  _| | (__ / /| | | | |_| |
#	           \__, |_|  \__,_|_| |_|\___/___|_| |_|\__, |
#	           |___/                                |___/
#     _           _        _       _                   _                        _ _
#    (_)_ __  ___| |_ __ _| | __ _| |_ ___  _ __      | | _____ _ __ _ __   ___| (_)
#    | | '_ \/ __| __/ _` | |/ _` | __/ _ \| '__|     | |/ / _ \ '__| '_ \ / _ \ | |
#    | | | | \__ \ |_ (_| | | (_| | |_ (_) | |        |   <  __/ |  | | | |  __/ | |
#    |_|_| |_|___/\__\__,_|_|\__,_|\__\___/|_|        |_|\_\___|_|  |_| |_|\___|_|_|
#        __  __  _     _____   _____      ___     _   _      _   ____  _ _  _____ ____
#   ___  \ \/ / | |_  |___  | |___ /     ( _ )   | \ | | ___| |_| __ )(_) |____  |___ /
#  / _ \  \  /  | __|    / /    |_ \     / _ \/\ |  \| |/ _ \ __|  _ \| | __| / /  |_ \
# |  __/  /  \  | |_    / /    ___) |   | (_>  < | |\  |  __/ |_| |_) | | |_ / /  ___) |
#  \___| /_/\_\  \__|  /_/    |____/     \___/\/ |_| \_|\___|\__|____/|_|\__/_/  |____/
#
#########################################################################################################################################################################
#procedury

source /opt/NeteXt73/procedury

#########################################################################################################################################################################
#Logi systemowe

cd /tmp/netext73
please_wait

if [ -e losowa ];then
	export losowa=$(cat losowa)
	(( losowa++ ))
	echo $losowa > losowa
    
else
	export losowa=1; echo $losowa > losowa
fi

#informacje o systemie
#GCC
if [ "$(dmesg | grep gcc)" != "" ]; then
	echo -e "<span color=\"$kolor_textu\"><b>$TEXT_LOGI0</b></span>\n$(dmesg | grep gcc  | sed 's/.*Linux/Linux/g' )" > system$losowa.log	
else
	echo -e "<span color=\"$kolor_textu\"><b>$TEXT_LOGI0</b></span>\n$(uname -a  | sed 's/.*Linux/Linux/g' )" > system$losowa.log	
fi
#procesor i wifi
echo -e "<span color=\"$kolor_textu\"><b>$TEXT_LOGI2</b></span>" >> system$losowa.log
echo -e "$(grep 'model name' /proc/cpuinfo | head -n1 | sed -e 's/model name'[[:space:]]:'//g' | sed -e 's/ //')" >>system$losowa.log
if [ "$(lspci | grep "Network controller:" |sed -e 's/'.*:'//g' -e 's/Network Connection//g' | head -n1 | sed -e 's/ //')" = "" ]; then
	wifi="no wifi"
else
	wifi="$(lspci | grep "Network controller:" |sed -e 's/'.*:'//g' -e 's/Network Connection//g' | head -n1 | sed -e 's/ //')"
fi
echo -e "$wifi" >> system$losowa.log
#scheduler
if [ "$(grep none /sys/block/sd*/queue/scheduler)" != "" ]; then
	echo -e "scheduler I/O :\nblk-mq" >> system$losowa.log 
else
	echo -e "scheduler I/O :\n$(cat /sys/block/sd*/queue/scheduler)"  >> system$losowa.log
fi
#system
echo -e "<span color=\"$kolor_textu\"><b>SYSTEM:</b></span> $(lsb_release -i | awk '{print $3}') $(lsb_release -r | awk '{print $2}') $(lsb_release -c | awk '{print $2}') $bit" >> system$losowa.log
echo -e "<span color=\"$kolor_textu\"><b>$TEXT_LOGI6</b></span>" >> system$losowa.log
#microcode intel
if [ "$(dpkg -l intel-microcode | grep "ii" | awk '{print $1}'| head -n1)" = "ii" ];  then
	echo "microcode Intel - <b>ON</b>" >> system$losowa.log
else
	echo "microcode Intel- <b>OFF</b>" >> system$losowa.log
fi
#microcode amd
if [ -e /lib/firmware/amd-ucode/microcode_amd.bin ];  then
	echo "microcode AMD - <b>ON</b>" >> system$losowa.log
else
	echo "microcode AMD - <b>OFF</b>" >> system$losowa.log
fi
#apm status
	if [ "$stan_apm" != "-" ]; then
		echo -e "$TEXT_SKRYPT APM - <b>ON</b>" >> system$losowa.log
	else
		echo -e "$TEXT_SKRYPT APM - <b>$TEXT_LOGI7</b>" >> system$losowa.log
	fi
if [ -e $wersja_apm ]; then
	echo "$TEXT_LOGI8 APM: <b>$(ls -al /etc/default/grub | cut -d " " -f 3)</b>" >> system$losowa.log
fi
if [ -e /lib/firmware/amd-ucode/microcode_amd.bin ]; then
	echo "$TEXT_LOGI8 microcode_amd.bin: <b>$(ls -al /lib/firmware/amd-ucode/microcode_amd.bin | cut -d " " -f 3)</b>" >> system$losowa.log
fi
if [ -e /lib/firmware/amd-ucode/microcode_amd_fam15h.bin ]; then
	echo "$TEXT_LOGI8 microcode_amd_fam15h.bin: <b>$(ls -al /lib/firmware/amd-ucode/microcode_amd_fam15h.bin | cut -d " " -f 3)</b>" >> system$losowa.log
fi
echo "$TEXT_LOGI8 GRUB: <b>$(ls -al /etc/default/grub | cut -d " " -f 3)</b>" >> system$losowa.log
echo -e "<span color=\"$kolor_textu\"><b>$TEXT_LOGI9</b></span>" >> system$losowa.log
grep "GRUB_CMDLINE_LINUX=" /etc/default/grub >> system$losowa.log
echo -e "<span color=\"$kolor_textu\"><b>$TEXT_LOGI10</b></span>" >> system$losowa.log
echo "GCC - $(gcc --version | head -n 1)" >> system$losowa.log
echo "Powertop - $(dpkg -l | grep powertop | awk '{print $3}' | head -n 1)" >> system$losowa.log
echo -e "<span color=\"$kolor_textu\"><b>OpenGL</b></span>" >> system$losowa.log
glxinfo | grep OpenGL | sed 's/OpenGL ext.*//g' | sed 's/OpenGL core profile extensions://g' | sed '/^[ \t]*$/ d' >> system$losowa.log
mv system$losowa.log zakladka1.log
#zakładka2
echo -e "NeteXt73 i kernel" > system$losowa.log  
echo -e "##############################################################################################" >> system$losowa.log
echo -e "\n$TEXT_LOGI12" >> system$losowa.log
echo -e "$(lsb_release -a)" >> system$losowa.log
echo -e "$(uname -a)" >> system$losowa.log
echo -e "\n$nazwa_skryptu"  >> system$losowa.log
echo -e "\n$TEXT_LOGI1\n$(dpkg -l | grep 'linux-image*'| grep -v -E 'linux-image-extra*|linux-image-generic' | sed -e 's/linux-image-//g' | awk '{print $2}'| sort -r | column -n)" >> system$losowa.log
echo -e "\n\nKonfiguracja netext73" >> system$losowa.log
echo -e "##############################################################################################" >> system$losowa.log
#katalogi
ls -la ~/.netext73 | grep drwxrwxr-x | sed '1s/.*//' >> system$losowa.log
#pliki
ls -la ~/.netext73 | grep rw-rw >> system$losowa.log
echo -e "\n\narchiwum_deb" >> system$losowa.log
echo -e "##############################################################################################" >> system$losowa.log
cat ~/.netext73/archiwum_deb >> system$losowa.log
echo -e "\n\ninstalator_kerneli" >> system$losowa.log
echo -e "##############################################################################################" >> system$losowa.log
cat ~/.netext73/instalator_kerneli >> system$losowa.log
echo -e "\n\njezyk" >> system$losowa.log
echo -e "##############################################################################################" >> system$losowa.log
cat ~/.netext73/jezyk >> system$losowa.log
echo -e "\n\nkernel_automat " >> system$losowa.log
echo -e "##############################################################################################" >> system$losowa.log
cat ~/.netext73/kernel_automat >> system$losowa.log
echo -e "\n\nroot_mode " >> system$losowa.log
echo -e "##############################################################################################" >> system$losowa.log
cat ~/.netext73/root_mode >> system$losowa.log
echo -e "\n\nzswap " >> system$losowa.log
echo -e "##############################################################################################" >> system$losowa.log
dmesg | grep zswap: >> system$losowa.log
echo -e "\n\nkonflikty " >> system$losowa.log
echo -e "##############################################################################################" >> system$losowa.log
dpkg -l | awk '{print $2}' | grep laptop-mode-tools -x >> system$losowa.log    
dpkg -l | awk '{print $2}' | grep tlp -x >> system$losowa.log    
echo -e "\n\nstan tmp " >> system$losowa.log
echo -e "##############################################################################################" >> system$losowa.log
ls -la /tmp/netext73 | grep -v drwxr | sed '1s/.*//' >> system$losowa.log
echo -e "\n\nsumy kontrolne " >> system$losowa.log
echo -e "##############################################################################################" >> system$losowa.log
cat /tmp/netext73/sumy/* >> system$losowa.log

echo -e "\n\nmounted-proc.conf " >> system$losowa.log
echo -e "##############################################################################################" >> system$losowa.log
cat /etc/init/mounted-proc.conf >> system$losowa.log
echo -e "\n\nureadahead.conf  " >> system$losowa.log
echo -e "##############################################################################################" >> system$losowa.log
cat /etc/init/ureadahead.conf >> system$losowa.log
echo -e "\n\nreadahead  " >> system$losowa.log
echo -e "##############################################################################################" >> system$losowa.log
cat /usr/lib/pm-utils/power.d/readahead >> system$losowa.log




echo -e "microcode  " >> apmsystem$losowa.log
echo -e "##############################################################################################" >> apmsystem$losowa.log
if [ "$(dpkg -l intel-microcode | grep "ii" | awk '{print $1}'| head -n1)" = "ii" ];  then
      echo "microcode Intel - ON" >> apmsystem$losowa.log
else
      echo "microcode Intel- OFF" >> apmsystem$losowa.log
fi
if [ -e /lib/firmware/amd-ucode/microcode_amd.bin ];  then
      echo "microcode AMD - ON" >> apmsystem$losowa.log
else
      echo "microcode AMD - OFF" >> apmsystem$losowa.log
fi
dpkg -l | grep linux-firmware | awk '{print $2" "$3}' | head -n 1 | sed 's/~.*//'  >> apmsystem$losowa.log

echo -e "\n\nwersja APM  " >> apmsystem$losowa.log
echo -e "##############################################################################################" >> apmsystem$losowa.log
ls $katalog_apm | cut -d "_" -f 7 | head -n 1 >> apmsystem$losowa.log
echo -e "\napm_status " >> apmsystem$losowa.log

ls /usr/lib/pm-utils/power.d/ -la | grep rwxr | grep -v drwxr-xr-x >> apmsystem$losowa.log
ls /etc/pm/power.d/ -la | grep -v drwxr-xr-x | sed '1s/.*//' >>  apmsystem$losowa.log
echo -e "\nls /usr/lib/pm-utils/power.d/ -la" >> apmsystem$losowa.log
ls /usr/lib/pm-utils/power.d/ -la | grep -v drwxr-xr-x | sed '1s/.*//' >> apmsystem$losowa.log
echo -e "\nls /etc/apm/event.d/ -la" >> apmsystem$losowa.log
ls -la /etc/apm/event.d/ | grep -v drwxr-xr-x | sed '1s/.*//' >> apmsystem$losowa.log
if [ "$apmik" = "nowy" ]; then
	cat /etc/systemd/system/hibernate.target.wants/apm_ext73-resume.service >> apmsystem$losowa.log
	cat /etc/systemd/system/hybrid-sleep.target.wants/apm_ext73-resume.service >> apmsystem$losowa.log
	cat /etc/systemd/system/suspend.target.wants/apm_ext73-resume.service >> apmsystem$losowa.log
	cat /etc/udev/rules.d/50-udev-apm.rules  >> apmsystem$losowa.log	
fi


echo -e "##############################################################################################" >> apmsystem$losowa.log
cat ~/.netext73/apm_status >> apmsystem$losowa.log
echo -e "\n\nscheduler  " >> apmsystem$losowa.log
echo -e "##############################################################################################" >> apmsystem$losowa.log
if [ "$(grep none /sys/block/sd*/queue/scheduler)" != "" ]; then
	echo -e "scheduler I/O :\nblk-mq" >> apmsystem$losowa.log 
else
	echo -e "scheduler I/O :\n$(cat /sys/block/sd*/queue/scheduler)"  >> apmsystem$losowa.log
fi

echo -e "lsmod" >> lsmodsystem$losowa.log
echo -e "##############################################################################################" >> lsmodsystem$losowa.log
lsmod >> lsmodsystem$losowa.log
echo -e "lspci" >> lspcisystem$losowa.log
echo -e "##############################################################################################" >> lspcisystem$losowa.log
lspci >> lspcisystem$losowa.log
echo -e "lsusb" >> lsusbsystem$losowa.log
echo -e "##############################################################################################" >> lsusbsystem$losowa.log
lsusb >> lsusbsystem$losowa.log
echo -e "qlxinfo" >> glxinfo$losowa.log
echo -e "##############################################################################################" >> glxinfo$losowa.log
glxinfo >> glxinfo$losowa.log

sed -i 's/<\/span>//g' system$losowa.log
sed -i 's/<span.*">//g' system$losowa.log
sed -i 's/<\/b>//g' system$losowa.log
sed -i 's/<b>//g' system$losowa.log
dmesg > dmesg.log
mv system$losowa.log netext.log

sudo ufw status verbose > firewall.log
for i in $(seq 1 42); do sudo dmidecode --type $i >> dmidecode.log; done
sudo tac /var/log/kern.log | sed -n 1,1000p > kern.log
#system logi
please_wait kill

if [ -e ~/.netext73/wysylkalogow ]; then
	s1="$(cat ~/.netext73/wysylkalogow | sed -n 1p)"
	s2="$(cat ~/.netext73/wysylkalogow | sed -n 2p)"
	s3="$(cat ~/.netext73/wysylkalogow | sed -n 3p)"
	s4="$(cat ~/.netext73/wysylkalogow | sed -n 4p)"
	s5="$(cat ~/.netext73/wysylkalogow | sed -n 5p)"
	s6="$(cat ~/.netext73/wysylkalogow | sed -n 6p)"
	s7="$(cat ~/.netext73/wysylkalogow | sed -n 7p)"
	s8="$(cat ~/.netext73/wysylkalogow | sed -n 8p)"
else
	s1="TRUE"
	s2="TRUE"
	s3="TRUE"
	s4="FALSE"
	s5="TRUE"
	s6="FALSE"
	s7="FALSE"
	s8="FALSE"
fi

KEY="$(echo $RANDOM)"
#zmienne losowe
res0=$(mktemp --tmpdir=/tmp/netext73 netext73_0.XXXXXXXX)
res1=$(mktemp --tmpdir=/tmp/netext73 netext73_1.XXXXXXXX)
res2=$(mktemp --tmpdir=/tmp/netext73 netext73_2.XXXXXXXX)
res3=$(mktemp --tmpdir=/tmp/netext73 netext73_3.XXXXXXXX)
res4=$(mktemp --tmpdir=/tmp/netext73 netext73_4.XXXXXXXX)
res5=$(mktemp --tmpdir=/tmp/netext73 netext73_5.XXXXXXXX)
res6=$(mktemp --tmpdir=/tmp/netext73 netext73_6.XXXXXXXX)
res7=$(mktemp --tmpdir=/tmp/netext73 netext73_7.XXXXXXXX)
res8=$(mktemp --tmpdir=/tmp/netext73 netext73_8.XXXXXXXX)
res9=$(mktemp --tmpdir=/tmp/netext73 netext73_9.XXXXXXXX)
res10=$(mktemp --tmpdir=/tmp/netext73 netext73_10.XXXXXXXX)
res11=$(mktemp --tmpdir=/tmp/netext73 netext73_11.XXXXXXXX)

#zakładki
yad --plug=$KEY --tabnum=1 --text="$(cat zakladka1.log)"	&> $res0 &
yad --plug=$KEY --tabnum=2 --text-info --filename="netext.log"	&> $res1 &
yad --plug=$KEY --tabnum=3 --text-info --filename="dmesg.log"	&> $res2 &
yad --plug=$KEY --tabnum=4 --text-info --filename="kern.log"	&> $res3 &
yad --plug=$KEY --tabnum=5 --text-info --filename=firewall.log 	&> $res4 &
yad --plug=$KEY --tabnum=6 --text-info --filename=dmidecode.log 	&> $res5 &
yad --plug=$KEY --tabnum=7 --text-info --filename="glxinfo$losowa.log"	&> $res6 &
yad --plug=$KEY --tabnum=8 --text-info --filename="apmsystem$losowa.log"	&> $res7 &
yad --plug=$KEY --tabnum=9 --text-info --filename="lsmodsystem$losowa.log"	&> $res8 &
yad --plug=$KEY --tabnum=10 --text-info --filename="lspcisystem$losowa.log"	&> $res9 &
yad --plug=$KEY --tabnum=11 --text-info --filename="lsusbsystem$losowa.log"	&> $res10 &
yad --plug=$KEY --tabnum=12 --text="<span color=\"$kolor_textu\"><b>$TEXT_ZAZNACZ_LOGI</b></span>" --form --columns=4 --field="netext.log:CHK" --field="dmesg.log:CHK" --field="kern.log:CHK" --field="glxinfo.log:CHK" --field="apm-microcode.log:CHK" --field="lsmod.log:CHK" --field="lspci.log:CHK" --field="lsusb.log:CHK" $s1 $s2 $s3 $s4 $s5 $s6 $s7 $s8	&> $res11 &
yad --notebook --key=$KEY --center --title="$nazwa_skryptu1 " \
--tab="main" --tab="netext" --tab="dmesg" --tab="kern" --tab="firewall" --tab="dmidecode" \
--tab="glxinfo" --tab="APM-microcode" --tab="lsmod" --tab="lspci" --tab="lsusb" --tab="$TEXT_ZAZNACZ_LOGI" \
--window-icon="/opt/NeteXt73/ikony/logi.png"  --width=$((600*$skala)) --height=$((600*$skala)) --on-top --button="$TEXT_PASTEBIN:0" --button="$TEXT_ZAMKNIJ:1"
klawisz=$?
if [ "$klawisz" = "0" ]; then
	cat $res11 | cut -d "|" -f 1 > ~/.netext73/wysylkalogow
	cat $res11 | cut -d "|" -f 2 >> ~/.netext73/wysylkalogow
	cat $res11 | cut -d "|" -f 3 >> ~/.netext73/wysylkalogow
	cat $res11 | cut -d "|" -f 4 >> ~/.netext73/wysylkalogow
	cat $res11 | cut -d "|" -f 5 >> ~/.netext73/wysylkalogow
	cat $res11 | cut -d "|" -f 6 >> ~/.netext73/wysylkalogow
	cat $res11 | cut -d "|" -f 7 >> ~/.netext73/wysylkalogow
	cat $res11 | cut -d "|" -f 8 >> ~/.netext73/wysylkalogow
	      
	export userek=$(cat /tmp/netext73/userek)
	sudo -u $userek bash << EOF
	if [ -e ~/.netext73/wysylkalogow ]; then
		if [ "$(cat  ~/.netext73/wysylkalogow | sed -n 1p)" != "FALSE" ]; then
			xdg-open $(cat netext.log | pastebinit)
		fi
		if [ "$(cat  ~/.netext73/wysylkalogow | sed -n 2p)" != "FALSE" ]; then
			xdg-open $(cat dmesg.log | pastebinit)
		fi
		if [ "$(cat  ~/.netext73/wysylkalogow | sed -n 3p)" != "FALSE" ]; then
			xdg-open $(cat kern.log | pastebinit)
		fi
		if [ "$(cat  ~/.netext73/wysylkalogow | sed -n 4p)" != "FALSE" ]; then
			xdg-open $(cat glxinfo$losowa.log | pastebinit)
		fi
		if [ "$(cat  ~/.netext73/wysylkalogow | sed -n 5p)" != "FALSE" ]; then
			xdg-open $(cat apmsystem$losowa.log | pastebinit)
		fi
		if [ "$(cat  ~/.netext73/wysylkalogow | sed -n 6p)" != "FALSE" ]; then
			xdg-open $(cat lsmodsystem$losowa.log | pastebinit)
		fi
		if [ "$(cat  ~/.netext73/wysylkalogow | sed -n 7p)" != "FALSE" ]; then
			xdg-open $(cat lspcisystem$losowa.log | pastebinit)
		fi
		if [ "$(cat  ~/.netext73/wysylkalogow | sed -n 8p)" != "FALSE" ]; then
			xdg-open $(cat lsusbsystem$losowa.log | pastebinit)
		fi
	else
		xdg-open $(cat netext.log | pastebinit)
	fi
EOF
	fi
	rm -f $res0 $res1 $res2 $res3 $res4 $res5 $res6 $res7 $res8 $res9 $res10 $res11
	
rm *.log losowa -f